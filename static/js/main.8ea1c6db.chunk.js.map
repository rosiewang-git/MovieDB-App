{"version":3,"sources":["images/logo.svg","constants.js","apiServices.js","store/slices/movies-slice.js","layouts/SharedComponenets/MovieCard.js","layouts/HomePage/Home.js","layouts/FavoritePage/Favorite.js","store/slices/user-slice.js","hooks/useUser.js","layouts/LoginPage/Login.js","layouts/RatedPage/Rated.js","layouts/MovieDetailPage/MovieDetail.js","layouts/Navbar/Navbar.js","App.js","store/store.js","index.js"],"names":["module","exports","__webpack_require__","p","API_KEY","IMG_SRC_BASE","API_SRC_BASE","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ClientAPI","getMoviesList","_getMoviesList","_asyncToGenerator","_callee","category","currentPage","url","_context","concat","axios","get","_x","_x2","apply","arguments","getMovieDetails","_getMovieDetails","_callee2","movieId","_context2","_x3","getRequestToken","_getRequestToken","_callee3","_context3","validateUser","_validateUser","_callee4","username","password","requestToken","_context4","post","request_token","_x4","_x5","_x6","createSession","_createSession","_callee5","_context5","_x7","getUserAccount","_getUserAccount","_callee6","sessionId","_context6","params","session_id","_x8","addMovieToFavorite","_addMovieToFavorite","_callee7","accountId","isFavorite","_context7","media_type","media_id","favorite","_x9","_x10","_x11","_x12","rateMovie","_rateMovie","_callee8","rateValue","_context8","_x13","_x14","_x15","getFavoriteMovies","_getFavoriteMovies","_callee9","_context9","_x16","_x17","getRatedMovies","_getRatedMovies","_callee10","_context10","_x18","_x19","moviesSlice","createSlice","initialState","moviesList","favList","ratedList","reducers","setMoviesList","action","payload","setInfo","setFavList","setRatedList","_moviesSlice$actions","actions","MovieCard","props","user","useSelector","item","myRating","movies","dispatch","useDispatch","React","createElement","className","Link","to","id","style","textDecoration","color","src","poster_path","alt","original_title","StarIcon","vote_average","Button","onClick","userId","_objectSpread","_defineProperty","handleToggleFavorite","FavoriteIcon","FavoriteBorderIcon","Home","_useState","useState","_useState2","_slicedToArray","setCategory","_useState3","_useState4","setCurrentPage","_useSelector","useEffect","resp","data","res","results","console","log","class","total_pages","aria-label","onChange","e","target","map","movie","rating","Boolean","Favorite","favMovies","setFavMovies","_ref","userSlice","setUser","useUser","navigate","useNavigate","loadUserMovies","userInfo","reduce","acc","_ref2","login","_ref3","_ref4","_ref5","userName","localStorage","setItem","JSON","stringify","logout","removeItem","loadUserData","userDataStr","getItem","parse","validationSchema","yup","required","Login","formik","useFormik","initialValues","onSubmit","handleSubmit","TextField","label","width","handleChange","touched","errors","helperText","Rated","ratedMovies","setRatedMovies","MovieDetail","score","setScore","useParams","detail","setDetail","title","release_date","overview","genres","ele","marginRight","_","range","num","production_companies","logo_path","Navbar","tab","setTab","anchorEl","setAnchorEl","logo","Box","sx","Tabs","textcolor","indicatorColor","route","index","padding","Tab","fontWeight","fontSize","Fragment","currentTarget","Menu","keepMounted","open","onClose","MenuItem","paddingRight","App","Routes","Route","static","path","element","store","configureStore","reducer","ReactDOM","render","Provider","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.8ea1c6db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","export const API_KEY = \"2f5e473b6eb9b3bb1714c9d84b277c9c\";\nexport const IMG_SRC_BASE = \"https://image.tmdb.org/t/p/w500\";\nexport const API_SRC_BASE = \"https://api.themoviedb.org/3\";\n","import axios from \"axios\";\nimport { API_KEY, API_SRC_BASE } from \"./constants\";\n\nconst ClientAPI = {\n    getMoviesList: async (category, currentPage) => {\n        let url = `${API_SRC_BASE}/movie/${category}?api_key=${API_KEY}&page=${currentPage}`;\n        return await axios.get(url);\n    },\n    getMovieDetails: async (movieId) => {\n        let url = `${API_SRC_BASE}/movie/${movieId}?api_key=${API_KEY}`;\n        return await axios.get(url);\n    },\n    getRequestToken: async () => {\n        let url = `${API_SRC_BASE}/authentication/token/new?api_key=${API_KEY}`;\n        return await axios.get(url);\n    },\n    validateUser: async (username, password, requestToken) => {\n        let url = `${API_SRC_BASE}/authentication/token/validate_with_login?api_key=${API_KEY}`;\n        return await axios.post(url, {\n            username,\n            password,\n            request_token: requestToken,\n        });\n    },\n    createSession: async (requestToken) => {\n        let url = `${API_SRC_BASE}/authentication/session/new?api_key=${API_KEY}`;\n        return await axios.post(url, { request_token: requestToken });\n    },\n    getUserAccount: async (sessionId) => {\n        let url = `${API_SRC_BASE}/account?api_key=${API_KEY}`;\n        return await axios.get(url, { params: { session_id: sessionId } });\n    },\n    addMovieToFavorite: async (accountId, movieId, isFavorite, sessionId) => {\n        let url = `${API_SRC_BASE}/account/${accountId}/favorite?api_key=${API_KEY}`;\n        return await axios.post(\n            url,\n            {\n                media_type: \"movie\",\n                media_id: movieId,\n                favorite: isFavorite,\n            },\n            { params: { session_id: sessionId } }\n        );\n    },\n    rateMovie: async (sessionId, movieId, rateValue) => {\n        let url = `${API_SRC_BASE}/movie/${movieId}/rating?api_key=${API_KEY}`;\n        return await axios.post(\n            url,\n            { value: rateValue },\n            { params: { session_id: sessionId } }\n        );\n    },\n    getFavoriteMovies: async (accountId, sessionId) => {\n        let url = `${API_SRC_BASE}/account/${accountId}/favorite/movies?api_key=${API_KEY}`;\n        return await axios.get(url, { params: { session_id: sessionId } });\n    },\n    getRatedMovies: async (accountId, sessionId) => {\n        let url = `${API_SRC_BASE}/account/${accountId}/rated/movies?api_key=${API_KEY}`;\n        return await axios.get(url, { params: { session_id: sessionId } });\n    },\n};\n\nexport default ClientAPI;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialMoviesState = {\n    moviesList: [],\n    info: {},\n    favList: {},\n    ratedList: {},\n};\n\nexport const moviesSlice = createSlice({\n    name: \"moviesSliceDetails\",\n    initialState: initialMoviesState,\n    reducers: {\n        setMoviesList: (state, action) => {\n            state.moviesList = action.payload;\n        },\n        setInfo: (state, action) => {\n            state.info = action.payload;\n        },\n        setFavList: (state, action) => {\n            state.favList = action.payload;\n        },\n        setRatedList: (state, action) => {\n            state.ratedList = action.payload;\n        },\n    },\n});\n\nexport const { setMoviesList, setInfo, setFavList, setRatedList } =\n    moviesSlice.actions;\n\nexport default moviesSlice.reducers;\n","import React from \"react\";\nimport \"./MovieCard.css\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport Button from \"@mui/material/Button\";\nimport { Link } from \"react-router-dom\";\nimport { IMG_SRC_BASE } from \"../../constants\";\nimport ClientAPI from \"../../apiServices\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setFavList } from \"../../store/slices/movies-slice\";\n\nexport default function MovieCard(props) {\n    const { user } = useSelector((state) => state.user);\n    const { item, myRating, favorite } = props;\n    const { favList } = useSelector((state) => state.movies);\n    const dispatch = useDispatch();\n    const handleToggleFavorite = (id) => {\n        if (!user) {\n            return;\n        }\n        const { sessionId, userId } = user;\n        ClientAPI.addMovieToFavorite(userId, id, !favList[id], sessionId).then(\n            () => {\n                dispatch(\n                    setFavList({\n                        ...favList,\n                        [id]: !favList[id],\n                    })\n                );\n            }\n        );\n    };\n\n    return (\n        <div className=\"movie-card\">\n            <Link\n                to={`/movies/${item.id}`}\n                style={{\n                    textDecoration: \"none\",\n                    color: \"black\",\n                }}\n                className=\"movie-title\"\n            >\n                <img\n                    src={`${IMG_SRC_BASE}${item.poster_path}`}\n                    alt=\"movie-img\"\n                />\n                <p className=\"character-limit\">{item.original_title} </p>\n            </Link>\n            <div className=\"card-score-fav\">\n                <span>\n                    <StarIcon style={{ color: \"orange\" }} />\n                    {user && myRating\n                        ? `${item.vote_average} / ${myRating}`\n                        : item.vote_average}\n                </span>\n                <Button onClick={() => handleToggleFavorite(item.id)}>\n                    {user && favorite ? (\n                        <FavoriteIcon style={{ color: \"red\" }} />\n                    ) : (\n                        <FavoriteBorderIcon style={{ color: \"grey\" }} />\n                    )}\n                </Button>\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport \"./Home.css\";\nimport MovieCard from \"../SharedComponenets/MovieCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setMoviesList, setInfo } from \"../../store/slices/movies-slice\";\nimport ClientAPI from \"../../apiServices\";\n\nexport default function Home() {\n    const [category, setCategory] = useState(\"now_playing\");\n    const [currentPage, setCurrentPage] = useState(1);\n    const { moviesList, info, favList } = useSelector((state) => state.movies);\n    const dispatch = useDispatch();\n\n    const handlePREV = () => {\n        if (currentPage > 1) setCurrentPage(currentPage - 1);\n    };\n\n    useEffect(() => {\n        ClientAPI.getMoviesList(category, currentPage)\n            .then((resp) => resp.data)\n            .then((res) => {\n                dispatch(setMoviesList(res.results));\n                dispatch(setInfo(res));\n            });\n    }, [currentPage, category]);\n    console.log(\"favlIST\", favList);\n    console.log(\"res\", info);\n    console.log(\"moviesList\", moviesList);\n\n    return (\n        <div className=\"home\">\n            <div className=\"home-top\">\n                {info && (\n                    <div className=\"pagination-flex\">\n                        <button\n                            type=\"button\"\n                            class=\"btn btn-outline-dark custom\"\n                            onClick={handlePREV}\n                        >\n                            PREV\n                        </button>\n                        <p>{currentPage + \"/\" + info.total_pages}</p>\n                        <button\n                            type=\"button\"\n                            class=\"btn btn-outline-dark custom\"\n                            onClick={() => setCurrentPage(currentPage + 1)}\n                        >\n                            NEXT\n                        </button>\n                    </div>\n                )}\n                <select\n                    class=\"form-select w-25\"\n                    aria-label=\"Default select example\"\n                    value={category}\n                    onChange={(e) => (\n                        setCategory(e.target.value), setCurrentPage(1)\n                    )}\n                >\n                    <option value=\"popular\">Popular</option>\n                    <option value=\"now_playing\">Now Playing</option>\n                    <option value=\"top_rated\">Top Rated</option>\n                    <option value=\"upcoming\">Upcoming</option>\n                </select>\n            </div>\n            <div className=\"movie-list\">\n                {moviesList &&\n                    moviesList.map((movie) => {\n                        return (\n                            <li key={movie.id}>\n                                <MovieCard\n                                    item={movie}\n                                    myRating={movie.rating}\n                                    favorite={Boolean(favList[movie.id])}\n                                />\n                            </li>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ClientAPI from \"../../apiServices\";\nimport \"./Favorite.css\";\nimport MovieCard from \"../SharedComponenets/MovieCard\";\n\nexport default function Favorite() {\n    const [favMovies, setFavMovies] = useState([]);\n    const { favList } = useSelector((state) => state.movies);\n    const { user } = useSelector((state) => state.user);\n\n    useEffect(() => {\n        if (!user) {\n            return;\n        }\n        ClientAPI.getFavoriteMovies(user.userId, user.sessionId).then(\n            ({ data }) => {\n                const { results } = data;\n                setFavMovies(results);\n            }\n        );\n    }, [user]);\n\n    return (\n        <div>\n            <div className=\"fav-movie-list\">\n                {user &&\n                    favMovies &&\n                    favMovies.map((movie) => {\n                        return (\n                            <li key={movie.id}>\n                                <MovieCard\n                                    item={movie}\n                                    myRating={movie.rating}\n                                    favorite={Boolean(favList[movie.id])}\n                                />\n                            </li>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialUserState = {\n    user: null,\n};\n\nexport const userSlice = createSlice({\n    name: \"userSliceDetails\",\n    initialState: initialUserState,\n    reducers: {\n        setUser: (state, action) => {\n            state.user = action.payload;\n        },\n    },\n});\n\nexport const { setUser } = userSlice.actions;\n\nexport default userSlice.reducers;\n","import ClientAPI from \"../apiServices\";\nimport { setFavList, setRatedList } from \"../store/slices/movies-slice\";\nimport { setUser } from \"../store/slices/user-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nexport default function useUser() {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const loadUserMovies = (userInfo) => {\n        ClientAPI.getFavoriteMovies(userInfo.userId, userInfo.sessionId).then(\n            ({ data }) => {\n                const { results } = data;\n                const favList = results.reduce((acc, movie) => {\n                    acc[movie.id] = true;\n                    return acc;\n                }, {});\n                dispatch(setFavList(favList));\n            }\n        );\n        ClientAPI.getRatedMovies(userInfo.userId, userInfo.sessionId).then(\n            ({ data }) => {\n                const { results } = data;\n                const ratedList = results.reduce((acc, movie) => {\n                    acc[movie.id] = movie.rating;\n                    return acc;\n                }, {});\n                dispatch(setRatedList(ratedList));\n            }\n        );\n    };\n\n    const login = (username, password) => {\n        return ClientAPI.getRequestToken().then(({ data }) => {\n            const { request_token } = data;\n            ClientAPI.validateUser(username, password, request_token).then(\n                () => {\n                    ClientAPI.createSession(request_token).then(({ data }) => {\n                        const { session_id } = data;\n                        ClientAPI.getUserAccount(session_id)\n                            .then(({ data }) => {\n                                const { id, username } = data;\n                                const userInfo = {\n                                    requestToken: request_token,\n                                    sessionId: session_id,\n                                    userId: id,\n                                    userName: username,\n                                };\n                                localStorage.setItem(\n                                    \"user\",\n                                    JSON.stringify(userInfo)\n                                );\n                                dispatch(setUser(userInfo));\n                                return userInfo;\n                            })\n                            .then((userInfo) => {\n                                loadUserMovies(userInfo);\n                            });\n                    });\n                }\n            );\n        });\n    };\n\n    const logout = () => {\n        localStorage.removeItem(\"user\");\n        dispatch(setUser(null));\n        navigate(\"/\");\n    };\n\n    const loadUserData = () => {\n        const userDataStr = localStorage.getItem(\"user\");\n        if (userDataStr) {\n            try {\n                const userInfo = JSON.parse(userDataStr);\n                dispatch(setUser(userInfo));\n                loadUserMovies(userInfo);\n            } catch (e) {\n                console.log(e);\n            }\n        }\n    };\n    return { login, logout, loadUserData };\n}\n","import React from \"react\";\nimport \"./Login.css\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport useUser from \"../../hooks/useUser\";\nimport { TextField } from \"@mui/material\";\n\nconst validationSchema = yup.object({\n    username: yup.string().required(\"please type username\"),\n    password: yup.string().required(\"please type password\"),\n});\n\nexport default function Login() {\n    const { login } = useUser();\n    const navigate = useNavigate();\n    const formik = useFormik({\n        initialValues: {\n            username: \"\",\n            password: \"\",\n        },\n        onSubmit: (values) => {\n            const { username, password } = values;\n            login(username, password).then(() => {\n                navigate(\"/\");\n            });\n        },\n        validationSchema,\n    });\n\n    return (\n        <form className=\"login-box\" onSubmit={formik.handleSubmit}>\n            <h1>Login</h1>\n            <div className=\"input-box\">\n                <TextField\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"Username\"\n                    type=\"text\"\n                    style={{ width: 400 }}\n                    onChange={formik.handleChange}\n                    value={formik.values.username}\n                    error={formik.touched.username && formik.errors.username}\n                    helperText={\n                        formik.touched.username && formik.errors.username\n                    }\n                />\n            </div>\n            <div className=\"input-box\">\n                <TextField\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    style={{ width: 400 }}\n                    onChange={formik.handleChange}\n                    value={formik.values.password}\n                    error={formik.touched.username && formik.errors.username}\n                    helperText={\n                        formik.touched.username && formik.errors.username\n                    }\n                />\n            </div>\n            <button\n                type=\"button\"\n                class=\"btn btn-outline-dark custom\"\n                type=\"submit\"\n            >\n                SUBMIT\n            </button>\n        </form>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ClientAPI from \"../../apiServices\";\nimport \"./Rated.css\";\nimport MovieCard from \"../SharedComponenets/MovieCard\";\n\nexport default function Rated() {\n    const [ratedMovies, setRatedMovies] = useState([]);\n    const { favList } = useSelector((state) => state.movies);\n    const { user } = useSelector((state) => state.user);\n\n    useEffect(() => {\n        if (!user) {\n            return;\n        }\n        ClientAPI.getRatedMovies(user.userId, user.sessionId).then(\n            ({ data }) => {\n                const { results } = data;\n                setRatedMovies(results);\n            }\n        );\n    }, [user]);\n    console.log(\"rated movies in rated\", ratedMovies);\n\n    return (\n        <div>\n            <div className=\"rated-movie-list\">\n                {user &&\n                    ratedMovies &&\n                    ratedMovies.map((movie) => {\n                        return (\n                            <li key={movie.id}>\n                                <MovieCard\n                                    item={movie}\n                                    myRating={movie.rating}\n                                    favorite={Boolean(favList[movie.id])}\n                                />\n                            </li>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./MovieDetail.css\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport { Button } from \"@mui/material\";\nimport ClientAPI from \"../../apiServices\";\nimport { IMG_SRC_BASE } from \"../../constants\";\nimport { setRatedList } from \"../../store/slices/movies-slice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport _ from \"lodash\";\n\nexport default function MovieDetail() {\n    const [score, setScore] = useState(1);\n    const { movieId } = useParams();\n    const [detail, setDetail] = useState({});\n    const { ratedList } = useSelector((state) => state.movies);\n    const { user } = useSelector((state) => state.user);\n    const dispatch = useDispatch();\n\n    const handleRate = (id, rating) => {\n        if (user) {\n            ClientAPI.rateMovie(user.sessionId, id, rating).then(() => {\n                dispatch(\n                    setRatedList({\n                        ...ratedList,\n                        [id]: rating,\n                    })\n                );\n            });\n        }\n    };\n\n    useEffect(() => {\n        ClientAPI.getMovieDetails(movieId)\n            .then((resp) => resp.data)\n            .then((res) => {\n                setDetail(res);\n            });\n    }, []);\n\n    return (\n        <div className=\"detail-container\">\n            <img src={`${IMG_SRC_BASE}${detail.poster_path}`} alt=\"movie-img\" />\n            <div>\n                <h1>{detail.title} </h1>\n                <p>Release date:</p>\n                <p>{detail.release_date} </p>\n                <p>Overview: </p>\n                <p>{detail.overview} </p>\n                <p>Genres: </p>\n                <div className=\"genres-flex\">\n                    {detail.genres &&\n                        detail.genres.map((ele) => {\n                            return <p>{ele.name} </p>;\n                        })}\n                </div>\n                <p>Average Rating: </p>\n                <span>\n                    <StarIcon\n                        style={{ color: \"orange\", marginRight: \"10px\" }}\n                    />\n                    {detail.vote_average}\n                </span>\n                <p>Your Rating: </p>\n                {user && ratedList[detail.id] ? (\n                    <p>{ratedList[detail.id]}</p>\n                ) : (\n                    <p> Not yet</p>\n                )}\n                <span className=\"rating-flex\">\n                    <select\n                        class=\"form-select\"\n                        style={{ width: \"100px\" }}\n                        aria-label=\"Default select example\"\n                        value={score}\n                        onChange={(e) => setScore(e.target.value)}\n                    >\n                        {_.range(1, 11).map((num) => (\n                            <option key={num} value={num}>\n                                {num}\n                            </option>\n                        ))}\n                    </select>\n                    <button\n                        type=\"button\"\n                        class=\"btn btn-outline-dark custom\"\n                        onClick={() => handleRate(detail.id, score)}\n                    >\n                        RATE IT!\n                    </button>\n                </span>\n                <p>Production Companies: </p>\n                <span className=\"production-flex\">\n                    {detail.production_companies &&\n                        detail.production_companies.map((ele) => {\n                            return (\n                                <div>\n                                    <img\n                                        src={`https://image.tmdb.org/t/p/w500${ele.logo_path}`}\n                                        alt=\"company-img\"\n                                    />\n                                    <p>{ele.name}</p>\n                                </div>\n                            );\n                        })}\n                </span>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Box from \"@mui/material/Box\";\nimport logo from \"./../../images/logo.svg\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\nimport useUser from \"../../hooks/useUser\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport { useSelector } from \"react-redux\";\n\nexport default function Navbar() {\n    const { user } = useSelector((state) => state.user);\n    const [tab, setTab] = useState(\"home\");\n    const { logout } = useUser();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const routes = [{ to: \"/\", title: \"Home\" }];\n    const protectedRoutes = [\n        { to: \"/\", title: \"Home\" },\n        { to: \"/favorite\", title: \"Favorite\" },\n        { to: \"/rated\", title: \"Rated\" },\n    ];\n    const handleClick = (e) => {\n        setAnchorEl(e.currentTarget);\n    };\n    const handleLogout = () => {\n        logout();\n        setAnchorEl(null);\n    };\n\n    return (\n        <div className=\"header-box\">\n            <img src={logo} className=\"logo\" alt=\"web-logo-img\" />\n            <Box sx={{ width: \"100%\" }}>\n                <Tabs\n                    value={tab}\n                    onChange={() => setTab(tab)}\n                    textcolor=\"white\"\n                    indicatorColor=\"none\"\n                    aria-label=\"secondary tabs example\"\n                >\n                    {(user ? protectedRoutes : routes).map((route, index) => {\n                        return (\n                            <Link\n                                key={index}\n                                to={route.to}\n                                style={{\n                                    textDecoration: \"none\",\n                                    padding: \"20px\",\n                                }}\n                            >\n                                <Tab\n                                    label={route.title}\n                                    style={{\n                                        color: \"white\",\n                                        fontWeight: \"bold\",\n                                        fontSize: \"25px\",\n                                    }}\n                                />\n                            </Link>\n                        );\n                    })}\n                </Tabs>\n            </Box>\n            {user ? (\n                <>\n                    <Box onClick={handleClick} className=\"username\">\n                        {user.userName}{\" \"}\n                    </Box>\n                    <Menu\n                        id=\"user-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={() => setAnchorEl(null)}\n                    >\n                        <MenuItem\n                            onClick={handleLogout}\n                            style={{ width: \"130px\" }}\n                        >\n                            Logout\n                        </MenuItem>\n                    </Menu>\n                </>\n            ) : (\n                <Link to=\"/login\" className=\"login\">\n                    <Box\n                        style={{\n                            paddingRight: \"40px\",\n                            color: \"white\",\n                            fontWeight: \"bold\",\n                            fontSize: \"30px\",\n                        }}\n                    >\n                        Login\n                    </Box>\n                </Link>\n            )}\n        </div>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { Routes, Route } from \"react-router\";\nimport Home from \"./layouts/HomePage/Home\";\nimport Favorite from \"./layouts/FavoritePage/Favorite\";\nimport Login from \"./layouts/LoginPage/Login\";\nimport Rated from \"./layouts/RatedPage/Rated\";\nimport MovieDetail from \"./layouts/MovieDetailPage/MovieDetail\";\nimport useUser from \"./hooks/useUser\";\nimport Navbar from \"./layouts/Navbar/Navbar\";\n\nfunction App() {\n    const { loadUserData } = useUser();\n    useEffect(() => {\n        loadUserData();\n    }, []);\n    return (\n        <div className=\"App\">\n            <Navbar />\n            <Routes>\n                <Route static path=\"/\" element={<Home />} />\n                <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/favorite\" element={<Favorite />} />\n                <Route path=\"/rated\" element={<Rated />} />\n                <Route path=\"/movies/:movieId\" element={<MovieDetail />} />\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { moviesSlice } from \"./slices/movies-slice\";\nimport { userSlice } from \"./slices/user-slice\";\n\nexport const store = configureStore({\n    reducer: {\n        movies: moviesSlice.reducer,\n        user: userSlice.reducer,\n    },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}