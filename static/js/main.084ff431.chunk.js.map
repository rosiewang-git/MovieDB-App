{"version":3,"sources":["logo.svg","constants.js","apiServices.js","store/slices/movies-slice.js","contexts/userContext.js","hooks/useUser.js","components/MovieCard.js","components/Home.js","components/Favorite.js","components/Login.js","components/Rated.js","components/Header.js","components/MovieDetail.js","App.js","store/index.js","components/Providers.js","index.js"],"names":["module","exports","__webpack_require__","p","API_KEY","IMG_SRC_BASE","API_SRC_BASE","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ClientAPI","getMoviesList","_getMoviesList","_asyncToGenerator","_callee","category","currentPage","url","_context","concat","axios","get","_x","_x2","apply","arguments","getMovieDetails","_getMovieDetails","_callee2","movieId","_context2","_x3","getRequestToken","_getRequestToken","_callee3","_context3","validateUser","_validateUser","_callee4","username","password","requestToken","_context4","post","request_token","_x4","_x5","_x6","createSession","_createSession","_callee5","_context5","_x7","getUserAccount","_getUserAccount","_callee6","sessionId","_context6","params","session_id","_x8","addMovieToFavorite","_addMovieToFavorite","_callee7","accountId","isFavorite","_context7","media_type","media_id","favorite","_x9","_x10","_x11","_x12","rateMovie","_rateMovie","_callee8","rateValue","_context8","_x13","_x14","_x15","getFavoriteMovies","_getFavoriteMovies","_callee9","_context9","_x16","_x17","getRatedMovies","_getRatedMovies","_callee10","_context10","_x18","_x19","moviesSlice","createSlice","initialState","moviesList","favList","ratedList","reducers","setMoviesList","action","payload","setInfo","setFavList","setRatedList","_moviesSlice$actions","actions","userContext","React","createContext","useUser","_useContext","useContext","user","setUser","dispatch","useDispatch","loadUserMovies","userInfo","userId","_ref","data","results","reduce","acc","movie","id","_ref2","rating","login","_ref3","_ref4","_ref5","userName","localStorage","setItem","JSON","stringify","logout","removeItem","loadUserData","userDataStr","getItem","parse","e","console","log","MovieCard","props","item","myRating","useSelector","movies","createElement","className","src","poster_path","alt","Link","to","style","textDecoration","color","original_title","StarIcon","vote_average","Button","onClick","_objectSpread","_defineProperty","handleToggleFavorite","FavoriteIcon","FavoriteBorderIcon","Home","_useState","useState","_useState2","_slicedToArray","setCategory","_useState3","_useState4","setCurrentPage","_useSelector","useEffect","resp","res","variant","total_pages","Box","sx","width","paddingRight","FormControl","fullwidth","InputLabel","Select","onChange","target","MenuItem","map","Boolean","Favorite","favMovies","setFavMovies","validationSchema","yup","required","Login","navigate","useNavigate","formik","useFormik","initialValues","onSubmit","handleSubmit","TextField","label","handleChange","touched","errors","helperText","backgroundColor","Rated","ratedMovies","setRatedMovies","Header","tab","setTab","_useUser","anchorEl","setAnchorEl","logo","Tabs","event","newValue","textcolor","indicatorColor","aria-label","title","route","padding","Tab","fontWeight","fontSize","Fragment","currentTarget","Menu","keepMounted","open","onClose","MovieDetail","score","setScore","useParams","detail","setDetail","release_date","overview","genres","ele","marginRight","_","range","num","production_companies","logo_path","App","Routes","Route","static","path","element","store","configureStore","reducer","Providers","Provider","children","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.084ff431.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","export const API_KEY = \"2f5e473b6eb9b3bb1714c9d84b277c9c\";\nexport const IMG_SRC_BASE = \"https://image.tmdb.org/t/p/w500\";\nexport const API_SRC_BASE = \"https://api.themoviedb.org/3\";\n","import axios from \"axios\";\nimport { API_KEY, API_SRC_BASE } from \"./constants\";\n\nconst ClientAPI = {\n    getMoviesList: async (category, currentPage) => {\n        let url = `${API_SRC_BASE}/movie/${category}?api_key=${API_KEY}&page=${currentPage}`;\n        return await axios.get(url);\n    },\n    getMovieDetails: async (movieId) => {\n        let url = `${API_SRC_BASE}/movie/${movieId}?api_key=${API_KEY}`;\n        return await axios.get(url);\n    },\n    getRequestToken: async () => {\n        let url = `${API_SRC_BASE}/authentication/token/new?api_key=${API_KEY}`;\n        return await axios.get(url);\n    },\n    validateUser: async (username, password, requestToken) => {\n        let url = `${API_SRC_BASE}/authentication/token/validate_with_login?api_key=${API_KEY}`;\n        return await axios.post(url, {\n            username,\n            password,\n            request_token: requestToken,\n        });\n    },\n    createSession: async (requestToken) => {\n        let url = `${API_SRC_BASE}/authentication/session/new?api_key=${API_KEY}`;\n        return await axios.post(url, { request_token: requestToken });\n    },\n    getUserAccount: async (sessionId) => {\n        let url = `${API_SRC_BASE}/account?api_key=${API_KEY}`;\n        return await axios.get(url, { params: { session_id: sessionId } });\n    },\n    addMovieToFavorite: async (accountId, movieId, isFavorite, sessionId) => {\n        let url = `${API_SRC_BASE}/account/${accountId}/favorite?api_key=${API_KEY}`;\n        return await axios.post(\n            url,\n            {\n                media_type: \"movie\",\n                media_id: movieId,\n                favorite: isFavorite,\n            },\n            { params: { session_id: sessionId } }\n        );\n    },\n    rateMovie: async (sessionId, movieId, rateValue) => {\n        let url = `${API_SRC_BASE}/movie/${movieId}/rating?api_key=${API_KEY}`;\n        return await axios.post(\n            url,\n            { value: rateValue },\n            { params: { session_id: sessionId } }\n        );\n    },\n    getFavoriteMovies: async (accountId, sessionId) => {\n        let url = `${API_SRC_BASE}/account/${accountId}/favorite/movies?api_key=${API_KEY}`;\n        return await axios.get(url, { params: { session_id: sessionId } });\n    },\n    getRatedMovies: async (accountId, sessionId) => {\n        let url = `${API_SRC_BASE}/account/${accountId}/rated/movies?api_key=${API_KEY}`;\n        return await axios.get(url, { params: { session_id: sessionId } });\n    },\n};\n\nexport default ClientAPI;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialMoviesState = {\n    moviesList: [],\n    info: {},\n    favList: {},\n    ratedList: {},\n};\n\nexport const moviesSlice = createSlice({\n    name: \"moviesSliceDetails\",\n    initialState: initialMoviesState,\n    reducers: {\n        setMoviesList: (state, action) => {\n            state.moviesList = action.payload;\n        },\n        setInfo: (state, action) => {\n            state.info = action.payload;\n        },\n        setFavList: (state, action) => {\n            state.favList = action.payload;\n        },\n        setRatedList: (state, action) => {\n            state.ratedList = action.payload;\n        },\n    },\n});\n\nexport const { setMoviesList, setInfo, setFavList, setRatedList } =\n    moviesSlice.actions;\n\nexport default moviesSlice.reducers;\n","import React from \"react\";\n\nconst userContext = React.createContext({});\n\nexport default userContext;\n","import ClientAPI from \"../apiServices\";\nimport { setFavList, setRatedList } from \"../store/slices/movies-slice\";\nimport { useDispatch } from \"react-redux\";\nimport { useContext } from \"react\";\nimport userContext from \"../contexts/userContext\";\n\nexport default function useUser() {\n    const { user, setUser } = useContext(userContext);\n    const dispatch = useDispatch();\n    const loadUserMovies = (userInfo) => {\n        ClientAPI.getFavoriteMovies(userInfo.userId, userInfo.sessionId).then(\n            ({ data }) => {\n                const { results } = data;\n                const favList = results.reduce((acc, movie) => {\n                    acc[movie.id] = true;\n                    return acc;\n                }, {});\n                dispatch(setFavList(favList));\n            }\n        );\n        ClientAPI.getRatedMovies(userInfo.userId, userInfo.sessionId).then(\n            ({ data }) => {\n                const { results } = data;\n                const ratedList = results.reduce((acc, movie) => {\n                    acc[movie.id] = movie.rating;\n                    return acc;\n                }, {});\n                dispatch(setRatedList(ratedList));\n            }\n        );\n    };\n\n    const login = (username, password) => {\n        return ClientAPI.getRequestToken().then(({ data }) => {\n            const { request_token } = data;\n            ClientAPI.validateUser(username, password, request_token).then(\n                () => {\n                    ClientAPI.createSession(request_token).then(({ data }) => {\n                        const { session_id } = data;\n                        ClientAPI.getUserAccount(session_id)\n                            .then(({ data }) => {\n                                const { id, username } = data;\n                                const userInfo = {\n                                    requestToken: request_token,\n                                    sessionId: session_id,\n                                    userId: id,\n                                    userName: username,\n                                };\n                                localStorage.setItem(\n                                    \"user\",\n                                    JSON.stringify(userInfo)\n                                );\n                                setUser(userInfo);\n                                return userInfo;\n                            })\n                            .then((userInfo) => {\n                                loadUserMovies(userInfo);\n                            });\n                    });\n                }\n            );\n        });\n    };\n\n    const logout = () => {\n        localStorage.removeItem(\"user\");\n        setUser(null);\n    };\n\n    const loadUserData = () => {\n        const userDataStr = localStorage.getItem(\"user\");\n        if (userDataStr) {\n            try {\n                const userInfo = JSON.parse(userDataStr);\n                setUser(userInfo);\n                loadUserMovies(userInfo);\n            } catch (e) {\n                console.log(e);\n            }\n        }\n    };\n    return { user, setUser, login, logout, loadUserData };\n}\n","import React from \"react\";\nimport \"./MovieCard.css\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport Button from \"@mui/material/Button\";\nimport { Link } from \"react-router-dom\";\nimport { IMG_SRC_BASE } from \"../constants\";\nimport useUser from \"../hooks/useUser\";\nimport ClientAPI from \"../apiServices\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setFavList } from \"../store/slices/movies-slice\";\n\nexport default function MovieCard(props) {\n    const { user } = useUser();\n    const { item, myRating, favorite } = props;\n    const { favList } = useSelector((state) => state.movies);\n    const dispatch = useDispatch();\n    const handleToggleFavorite = (id) => {\n        if (!user) {\n            return;\n        }\n        const { sessionId, userId } = user;\n        ClientAPI.addMovieToFavorite(userId, id, !favList[id], sessionId).then(\n            () => {\n                dispatch(\n                    setFavList({\n                        ...favList,\n                        [id]: !favList[id],\n                    })\n                );\n            }\n        );\n    };\n\n    return (\n        <div className=\"movie-card\">\n            <img src={`${IMG_SRC_BASE}${item.poster_path}`} alt=\"movie-img\" />\n            <Link\n                to={`/movies/${item.id}`}\n                style={{\n                    textDecoration: \"none\",\n                    color: \"black\",\n                }}\n                className=\"movie-title\"\n            >\n                <p>{item.original_title} </p>\n            </Link>\n            <div className=\"card-score-fav\">\n                <span>\n                    <StarIcon style={{ color: \"orange\" }} />\n                    {myRating\n                        ? `${item.vote_average} / ${myRating}`\n                        : item.vote_average}\n                </span>\n                <Button onClick={() => handleToggleFavorite(item.id)}>\n                    {user && favorite ? (\n                        <FavoriteIcon style={{ color: \"red\" }} />\n                    ) : (\n                        <FavoriteBorderIcon style={{ color: \"grey\" }} />\n                    )}\n                </Button>\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport \"./Home.css\";\nimport MovieCard from \"./MovieCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setMoviesList, setInfo } from \"../store/slices/movies-slice\";\nimport ClientAPI from \"../apiServices\";\n\nexport default function Home() {\n    const [category, setCategory] = useState(\"now_playing\");\n    const [currentPage, setCurrentPage] = useState(1);\n    const { moviesList, info, favList } = useSelector((state) => state.movies);\n    const dispatch = useDispatch();\n\n    const handlePREV = () => {\n        if (currentPage > 1) setCurrentPage(currentPage - 1);\n    };\n\n    useEffect(() => {\n        ClientAPI.getMoviesList(category, currentPage)\n            .then((resp) => resp.data)\n            .then((res) => {\n                dispatch(setMoviesList(res.results));\n                dispatch(setInfo(res));\n            });\n    }, [currentPage, category]);\n\n    return (\n        <div className=\"home\">\n            <div className=\"home-top\">\n                {info && (\n                    <div className=\"pagination-flex\">\n                        <Button variant=\"outlined\" onClick={handlePREV}>\n                            PREV\n                        </Button>\n                        <p>{currentPage + \"/\" + info.total_pages}</p>\n                        <Button\n                            variant=\"outlined\"\n                            onClick={() => setCurrentPage(currentPage + 1)}\n                        >\n                            NEXT\n                        </Button>\n                    </div>\n                )}\n                <Box sx={{ width: 200, paddingRight: \"32px\" }}>\n                    <FormControl fullwidth>\n                        <InputLabel id=\"demo-simple-select-label\">\n                            Category\n                        </InputLabel>\n                        <Select\n                            value={category}\n                            onChange={(e) => setCategory(e.target.value)}\n                        >\n                            <MenuItem value={\"popular\"}>Popular</MenuItem>\n                            <MenuItem value={\"now_playing\"}>\n                                Now Playing\n                            </MenuItem>\n                            <MenuItem value={\"top_rated\"}>Top Rated</MenuItem>\n                            <MenuItem value={\"upcoming\"}>Upcoming</MenuItem>\n                        </Select>\n                    </FormControl>\n                </Box>\n            </div>\n            <div className=\"movie-list\">\n                {moviesList &&\n                    moviesList.map((movie) => {\n                        return (\n                            <li key={movie.id}>\n                                <MovieCard\n                                    item={movie}\n                                    myRating={movie.rating}\n                                    favorite={Boolean(favList[movie.id])}\n                                />\n                            </li>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ClientAPI from \"../apiServices\";\nimport useUser from \"../hooks/useUser\";\nimport \"./Favorite.css\";\nimport MovieCard from \"./MovieCard\";\n\nexport default function Favorite() {\n    const [favMovies, setFavMovies] = useState([]);\n    const { favList } = useSelector((state) => state.movies);\n    const { user } = useUser();\n\n    useEffect(() => {\n        if (!user) {\n            return;\n        }\n        ClientAPI.getFavoriteMovies(user.userId, user.sessionId).then(\n            ({ data }) => {\n                const { results } = data;\n                setFavMovies(results);\n            }\n        );\n    }, [user]);\n\n    console.log(\"favMovies in Favorite:\", favMovies);\n    return (\n        <div>\n            <h1>Favorite List</h1>\n            <div className=\"fav-movie-list\">\n                {user &&\n                    favMovies &&\n                    favMovies.map((movie) => {\n                        return (\n                            <li key={movie.id}>\n                                <MovieCard\n                                    item={movie}\n                                    myRating={movie.rating}\n                                    favorite={Boolean(favList[movie.id])}\n                                />\n                            </li>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport \"./Login.css\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\nimport useUser from \"../hooks/useUser\";\nimport { TextField } from \"@mui/material\";\n\nconst validationSchema = yup.object({\n    username: yup.string().required(\"please type username\"),\n    password: yup.string().required(\"please type password\"),\n});\n\nexport default function Login() {\n    const { login } = useUser();\n    const navigate = useNavigate();\n    const formik = useFormik({\n        initialValues: {\n            username: \"\",\n            password: \"\",\n        },\n        onSubmit: (values) => {\n            const { username, password } = values;\n            login(username, password).then(() => {\n                navigate(\"/\");\n            });\n        },\n        validationSchema,\n    });\n\n    return (\n        <form className=\"login-box\" onSubmit={formik.handleSubmit}>\n            <h1>Login</h1>\n            <div className=\"input-box\">\n                <TextField\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"Username\"\n                    type=\"text\"\n                    style={{ width: 400 }}\n                    onChange={formik.handleChange}\n                    value={formik.values.username}\n                    error={formik.touched.username && formik.errors.username}\n                    helperText={\n                        formik.touched.username && formik.errors.username\n                    }\n                />\n            </div>\n            <div className=\"input-box\">\n                <TextField\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"text\"\n                    style={{ width: 400 }}\n                    onChange={formik.handleChange}\n                    value={formik.values.password}\n                    error={formik.touched.username && formik.errors.username}\n                    helperText={\n                        formik.touched.username && formik.errors.username\n                    }\n                />\n            </div>\n            <Button\n                fullwidth\n                variant=\"contained\"\n                style={{ backgroundColor: \"blueviolet\", width: 300 }}\n                type=\"submit\"\n            >\n                SUBMIT\n            </Button>\n        </form>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ClientAPI from \"../apiServices\";\nimport useUser from \"../hooks/useUser\";\nimport \"./Rated.css\";\nimport MovieCard from \"./MovieCard\";\n\nexport default function Rated() {\n    const [ratedMovies, setRatedMovies] = useState([]);\n    const { favList } = useSelector((state) => state.movies);\n    const { user } = useUser();\n\n    useEffect(() => {\n        if (!user) {\n            return;\n        }\n        ClientAPI.getRatedMovies(user.userId, user.sessionId).then(\n            ({ data }) => {\n                const { results } = data;\n                setRatedMovies(results);\n            }\n        );\n    }, [user]);\n\n    return (\n        <div>\n            <h1>Rated List</h1>\n            <div className=\"rated-movie-list\">\n                {user &&\n                    ratedMovies &&\n                    ratedMovies.map((movie) => {\n                        return (\n                            <li key={movie.id}>\n                                <MovieCard\n                                    item={movie}\n                                    myRating={movie.rating}\n                                    favorite={Boolean(favList[movie.id])}\n                                />\n                            </li>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Box from \"@mui/material/Box\";\nimport logo from \"./../logo.svg\";\nimport \"./Header.css\";\nimport { Link } from \"react-router-dom\";\nimport useUser from \"../hooks/useUser\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\n\nexport default function Header() {\n    const [tab, setTab] = useState(\"home\");\n    const { user, logout } = useUser();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const handleChange = (event, newValue) => {\n        setTab(newValue);\n    };\n    const routes = [\n        { to: \"/MovieDB-App/\", title: \"Home\" },\n        { to: \"/MovieDB-App/favorite\", title: \"Favorite\" },\n        { to: \"/MovieDB-App/rated\", title: \"Rated\" },\n    ];\n    const handleClick = (e) => {\n        setAnchorEl(e.currentTarget);\n    };\n    const handleLogout = () => {\n        logout();\n        setAnchorEl(null);\n    };\n    return (\n        <div className=\"header-box\">\n            <img src={logo} className=\"logo\" alt=\"web-logo-img\" />\n            <Box sx={{ width: \"100%\" }}>\n                <Tabs\n                    value={tab}\n                    onChange={handleChange}\n                    textcolor=\"white\"\n                    indicatorColor=\"none\"\n                    aria-label=\"secondary tabs example\"\n                >\n                    {routes.map((route) => {\n                        return (\n                            <Link\n                                to={route.to}\n                                style={{\n                                    textDecoration: \"none\",\n                                    padding: \"20px\",\n                                }}\n                            >\n                                <Tab\n                                    label={route.title}\n                                    style={{\n                                        color: \"white\",\n                                        fontWeight: \"bold\",\n                                        fontSize: \"25px\",\n                                    }}\n                                />\n                            </Link>\n                        );\n                    })}\n                </Tabs>\n            </Box>\n            {user ? (\n                <>\n                    <Box\n                        onClick={handleClick}\n                        style={{\n                            paddingRight: \"30px\",\n                            color: \"white\",\n                            fontWeight: \"bold\",\n                            fontSize: \"30px\",\n                        }}\n                    >\n                        {user.userName}{\" \"}\n                    </Box>\n                    <Menu\n                        id=\"user-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={() => setAnchorEl(null)}\n                    >\n                        <MenuItem\n                            onClick={handleLogout}\n                            style={{ width: \"130px\" }}\n                        >\n                            Logout\n                        </MenuItem>\n                    </Menu>\n                </>\n            ) : (\n                <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\n                    <Box\n                        style={{\n                            paddingRight: \"40px\",\n                            color: \"white\",\n                            fontWeight: \"bold\",\n                            fontSize: \"30px\",\n                        }}\n                    >\n                        Login\n                    </Box>\n                </Link>\n            )}\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./MovieDetail.css\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { Button } from \"@mui/material\";\nimport ClientAPI from \"../apiServices\";\nimport { IMG_SRC_BASE } from \"../constants\";\nimport { setRatedList } from \"../store/slices/movies-slice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useUser from \"../hooks/useUser\";\nimport _ from \"lodash\";\n\nexport default function MovieDetail() {\n    const [score, setScore] = useState(1);\n    const { movieId } = useParams();\n    const [detail, setDetail] = useState({});\n    const { ratedList } = useSelector((state) => state.movies);\n    const { user } = useUser();\n    const dispatch = useDispatch();\n\n    const handleRate = (id, rating) => {\n        ClientAPI.rateMovie(user.sessionId, id, rating).then(() => {\n            dispatch(\n                setRatedList({\n                    ...ratedList,\n                    [id]: rating,\n                })\n            );\n        });\n    };\n\n    useEffect(() => {\n        ClientAPI.getMovieDetails(movieId)\n            .then((resp) => resp.data)\n            .then((res) => {\n                setDetail(res);\n            });\n    }, []);\n\n    return (\n        <div className=\"detail-container\">\n            <img src={`${IMG_SRC_BASE}${detail.poster_path}`} alt=\"movie-img\" />\n            <div>\n                <h1>{detail.title} </h1>\n                <p>Release date:</p>\n                <p>{detail.release_date} </p>\n                <p>Overview: </p>\n                <p>{detail.overview} </p>\n                <p>Genres: </p>\n                <div className=\"genres-flex\">\n                    {detail.genres &&\n                        detail.genres.map((ele) => {\n                            return <p>{ele.name} </p>;\n                        })}\n                </div>\n                <p>Average Rating: </p>\n                <span>\n                    <StarIcon\n                        style={{ color: \"orange\", marginRight: \"10px\" }}\n                    />\n                    {detail.vote_average}\n                </span>\n                <p>Your Rating: </p>\n                {ratedList[detail.id] ? (\n                    <p>{ratedList[detail.id]}</p>\n                ) : (\n                    <p> Not yet</p>\n                )}\n                <span className=\"rating-flex\">\n                    <Select\n                        className=\"rating-box\"\n                        value={score}\n                        onChange={(e) => setScore(e.target.value)}\n                    >\n                        {_.range(1, 11).map((num) => (\n                            <MenuItem key={num} value={num}>\n                                {num}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                    <Button\n                        variant=\"outlined\"\n                        onClick={() => handleRate(detail.id, score)}\n                    >\n                        RATE IT!\n                    </Button>\n                </span>\n                <p>Production Companies: </p>\n                <span className=\"production-flex\">\n                    {detail.production_companies &&\n                        detail.production_companies.map((ele) => {\n                            return (\n                                <div>\n                                    <img\n                                        src={`https://image.tmdb.org/t/p/w500${ele.logo_path}`}\n                                        alt=\"company-img\"\n                                    />\n                                    <p>{ele.name}</p>\n                                </div>\n                            );\n                        })}\n                </span>\n            </div>\n        </div>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { Routes, Route } from \"react-router\";\nimport Home from \"./components/Home\";\nimport Favorite from \"./components/Favorite\";\nimport Login from \"./components/Login\";\nimport Rated from \"./components/Rated\";\nimport Header from \"./components/Header\";\nimport MovieDetail from \"./components/MovieDetail\";\nimport useUser from \"./hooks/useUser\";\n\nfunction App() {\n    const { loadUserData } = useUser();\n    useEffect(() => {\n        loadUserData();\n    }, []);\n    return (\n        <div className=\"App\">\n            <Header />\n            <Routes>\n                <Route static path=\"/MovieDB-App/\" element={<Home />} />\n                <Route path=\"/MovieDB-App/login\" element={<Login />} />\n                <Route path=\"/MovieDB-App/favorite\" element={<Favorite />} />\n                <Route path=\"/MovieDB-App/rated\" element={<Rated />} />\n                <Route\n                    path=\"/MovieDB-App/movies/:movieId\"\n                    element={<MovieDetail />}\n                />\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { moviesSlice } from \"./slices/movies-slice\";\n\nexport const store = configureStore({\n    reducer: {\n        movies: moviesSlice.reducer,\n    },\n});\n","import React, { useState } from \"react\";\nimport userContext from \"../contexts/userContext\";\n\nconst Providers = (props) => {\n    const [user, setUser] = useState(null);\n\n    return (\n        <div>\n            <userContext.Provider value={{ user, setUser }}>\n                {props.children}\n            </userContext.Provider>\n        </div>\n    );\n};\n\nexport default Providers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { store } from \"./store/index\";\nimport { Provider } from \"react-redux\";\nimport Providers from \"./components/Providers\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <Providers>\n                <App />\n            </Providers>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}